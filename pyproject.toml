# ========================================================
# [project] METADATOS de tu proyecto Python
# ========================================================
[project]
name = "demo"
version = "0.1.0"
description = "Demo sobre pruebas unitarias"
readme = "README.md"
requires-python = ">=3.9"
authors = [
    { name = "Ismael Sanroman", email = "ismaelsanromansanchez@gmail.com" }
]
dependencies = []
classifiers = [
    "Programming Language :: Python :: 3.9",
    "Operating System :: OS Independent"
]

# ========================================================
# [project.urls] Enlaces útiles (repo, docs, etc)
# ========================================================
[project.urls]
"Source" = "https://github.com/ismaelsanroman/UnitTest_demo"

# ========================================================
# [tool.setuptools.packages.find] Indica dónde buscar los paquetes de Python
# ========================================================
[tool.setuptools.packages.find]
where = ["src"]
include = ["pokemon"]

# ========================================================
# [tool.black] Configuración de Black (formateador)
# ========================================================
[tool.black]
line-length = 90
target-version = ['py310']

# ========================================================
# [tool.isort] Configuración de isort (orden de imports)
# ========================================================
[tool.isort]
profile = "black"
line_length = 90
multi_line_output = 3

# ========================================================
# [tool.xenon] Configuración de Xenon (complejidad)
# ========================================================
[tool.xenon]
max-absolute = "B"
max-modules = "B"
max-average = "B"
exclude = ["tests/*"]

# ========================================================
# [tool.pytest.ini_options] Configuración de pytest
# - addopts: Opciones por defecto para pytest:
#   -ra: resumen detallado de tests omitidos, saltados o fallidos.
#   --strict-markers: error si usas un marker no definido abajo.
#   --cov=src: mide la cobertura de la carpeta src.
#   --cov-report=term-missing: muestra líneas sin cubrir en terminal.
#   --cov-report=html: genera informe de cobertura en html.
# - markers: markers personalizados para pytest.
#   (Descripciones abajo de cada uno.)
# ========================================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["src"]
addopts = """
  -ra
  --strict-markers
  --cov=src
  --cov-report=term-missing
  --cov-report=html
"""
markers = [
    "unit: Unit tests rápidos.",
    "integration: Integration tests lentos.",
    "e2e: End-to-End tests completos.",
    "pokemon: Tests relacionados con Pokémon.",
    "create: Test de creación",
    "battle: Test batallas pokemon",
    "happy_path: Test que marca el camino correcto",
    "unhappy_path: Test que marca el camino incorrecto"
]

# ========================================================
# [tool.coverage.run] y [tool.coverage.report]
# Configuración para Coverage.py (cobertura de código)
# ========================================================
[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 80

# ========================================================
# [tool.cosmic-ray] Configuración para Cosmic Ray (mutación de código)
# ========================================================
[tool.cosmic-ray]
module-path = "src"
timeout = 30
exclude-modules = ["tests/*"]
test-runner = "cosmic_ray.testing.pytest.runner"
baseline = 80

# ========================================================
# [tool.hypothesis] Configuración para Hypothesis (property-based testing)
# ========================================================
[tool.hypothesis]
deadline = 500
max_examples = 50
report_multiple_bugs = true

# ========================================================
# [tool.pipenv.scripts] Scripts para pipenv run
# ========================================================
[tool.pipenv.scripts]
test = "pytest"
lint = "black . && isort . && flake8"
mutate = "cosmic-ray run && cosmic-ray report"

# ========================================================
# [build-system] Cómo construir el paquete (instalar y empaquetar)
# ========================================================
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
